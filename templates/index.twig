<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="{{ currentSite.language }}">

<head>
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta charset="utf-8" />
  <title>{{ docTitle ?? siteName }}</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0,
      maximum-scale=1.0, user-scalable=no, viewport-fit=cover" />
  <meta name="referrer" content="origin-when-cross-origin" />

  {% css alias('@web') ~ '/web/assets/' ~ 'styles.css' with {type: 'text/css'} %}
</head>

<body>
  <div id="main">
    <div class="container">
      <div class="formulier">
        <div class="loader__wrapper hidden" id="loader__wrapper">
          <div class="loader"></div>
        </div>
        <div id="formulier">
          <select id="cars" name="cars" class="custom__select">
            <option> Kies uw merk </option>
            <option value="audi">Audi</option>
            <option value="bmw">Bmw</option>
            <option value="seat">Seat</option>
            <option value="volkswagen">Volkswagen</option>
          </select>
          <select id="model" name="model">
            <option> Kies uw model </option>            
          </select>
          <select id="generatie" name="generatie">
            <option> Kies de generatie </option>
            <option value="2006">2006</option>
          </select>
          <select id="motortype" name="motortype">
            <option> Kies uw motortype </option>
            <option value="2.5">2.5</option>
          </select>
          <button id="infoButton" name="infoButton" class="disabled">
            Info
          </button>
        </div>

      </div>
    </div>
    <div class="container">
      <div class="card">
        <figure class="card__figure"> </figure>
        <div class="card__body">
          <div class="card__header">
            <h2> Koppel voor tunen: </h2>
            <p>info uit api</p>
            <h2>Koppel na tunen: </h2>
            <p>info uit api</p>
            <h2>vermogen na tunen: </h2>
            <p>info uit api</p>
            <h2>motorspecificaties: </h2>
            <ul>
              <li>
                Cilinder inhoud: info uit api
              </li>
              <li>
                Compressieverhouding: info uit api
              </li>
              <li>
                Type ecu: info uit api
              </li>
              <li>
                Boring X slag: info uit api
              </li>
              <li>
                Motornummer: info uit api
              </li>
            </ul>
          </div>
        </div>
      </div>
    </div>

    <script>
      (() => {
        const allFields = Array.from(document.querySelectorAll('[name="cars"],[name="model"],[name="generatie"],[name="motortype"]'));
        const carField = Array.from(document.querySelectorAll('[name="cars"]'));
        const infoButton = Array.from(document.querySelector('[name="infoButton"]'));
        infoButton.forEach(e => e.disabled = true);
        carField.forEach((el) => el.addEventListener('change', () => {
          if (el.value === "") {
            infoButton.forEach(e => e.disabled = true);
          }
        }))
        carField.forEach((a) => a.addEventListener('change', () => {
          if (carField.filter(carField => carField.value).length === carField.length) {
            document.getElementById("loader__wrapper").classList.remove('hidden');
            fetch('/Api/available/makes', {
              method: 'GET',
            }).then(response => response.json()).then((res) => {
              document.getElementById("loader__wrapper").classList.add('hidden');
              if (res) {
                var data = [];
                var dataSet = [];
                res.forEach((val, index) => {
                  if (res[index] !== null) {
                    for (var i in res[index]) {
                      data.push(res[index][i]);
                    }
                    dataSet.push(data);
                    data = [];
                  }
                })
                console.log(JSON.stringify(dataSet));
                dataSet.forEach((el) => {
                  const select = document.getElementById('model');
                  const option = document.createElement('option');
                  option.text = el[1];
                  select.add(option);
                })




                if (carField.filter(carField => carField.value).length === carField.length && allFields.filter(field => field.value).length === allFields.length) {
                  infoButton.forEach(e => e.disabled = false);
                }
              } else if (res.fail) {
                Submit.forEach(e => e.disabled = true);
                document.getElementById("loader__wrapper").classList.add('hidden');
              }
            })
          }
        })
        )
      }
      )();
    </script>
</body>

</html>